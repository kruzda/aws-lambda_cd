{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "repoName": {
      "Type": "String",
      "Default": "cfn-lambda_cd-myRepo",
      "Description": "Enter a name for the CodeCommit repository to be created."
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Designer": {
      "251d166d-d173-459b-91eb-18469f79e985": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 480,
          "y": 120
        },
        "z": 0,
        "embeds": [],
        "dependson": [
          "86f51784-3c2b-4a21-ae03-12511d6f3044",
          "d2a6c2f1-17ef-4caf-94ed-1089cdfc35fe",
          "418c3809-728f-4781-9155-509f9cad10ee",
          "887095d5-93d3-4362-a77f-3635d4739a61"
        ],
        "isrelatedto": [
          "418c3809-728f-4781-9155-509f9cad10ee",
          "d2a6c2f1-17ef-4caf-94ed-1089cdfc35fe",
          "86f51784-3c2b-4a21-ae03-12511d6f3044",
          "887095d5-93d3-4362-a77f-3635d4739a61"
        ]
      },
      "887095d5-93d3-4362-a77f-3635d4739a61": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 350,
          "y": 160
        },
        "z": 0,
        "embeds": [],
        "dependson": [
          "a6bd7331-9caf-4870-9e58-9995968ff894"
        ],
        "isrelatedto": [
          "a6bd7331-9caf-4870-9e58-9995968ff894"
        ]
      },
      "86f51784-3c2b-4a21-ae03-12511d6f3044": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 270,
          "y": -10
        },
        "z": 0,
        "embeds": []
      },
      "6616ae34-85b4-438d-b73e-7e55d4ed41ab": {
        "source": {
          "id": "887095d5-93d3-4362-a77f-3635d4739a61"
        },
        "target": {
          "id": "86f51784-3c2b-4a21-ae03-12511d6f3044"
        },
        "z": 1
      },
      "9055a222-9eb9-424f-b831-8394052c7f1e": {
        "source": {
          "id": "251d166d-d173-459b-91eb-18469f79e985"
        },
        "target": {
          "id": "86f51784-3c2b-4a21-ae03-12511d6f3044"
        },
        "z": 2
      },
      "418c3809-728f-4781-9155-509f9cad10ee": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 580,
          "y": 10
        },
        "z": 0,
        "embeds": [],
        "isrelatedto": [
          "d2a6c2f1-17ef-4caf-94ed-1089cdfc35fe"
        ]
      },
      "d2a6c2f1-17ef-4caf-94ed-1089cdfc35fe": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 420,
          "y": -40
        },
        "z": 0,
        "embeds": []
      },
      "e778dc35-b9d0-4bbf-9dd9-abe604217d32": {
        "source": {
          "id": "251d166d-d173-459b-91eb-18469f79e985"
        },
        "target": {
          "id": "d2a6c2f1-17ef-4caf-94ed-1089cdfc35fe"
        },
        "z": 11
      },
      "f6677e98-9514-407b-bba6-b3bffd4069f4": {
        "source": {
          "id": "251d166d-d173-459b-91eb-18469f79e985"
        },
        "target": {
          "id": "418c3809-728f-4781-9155-509f9cad10ee"
        },
        "z": 11
      },
      "a6bd7331-9caf-4870-9e58-9995968ff894": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 350,
          "y": 60
        },
        "z": 0,
        "embeds": []
      },
      "6818e010-60ff-4cca-86dd-5560b89588bc": {
        "source": {
          "id": "887095d5-93d3-4362-a77f-3635d4739a61"
        },
        "target": {
          "id": "a6bd7331-9caf-4870-9e58-9995968ff894"
        },
        "z": 11
      },
      "23097c7d-ecf5-4fd3-9d4d-991fae6e491f": {
        "source": {
          "id": "251d166d-d173-459b-91eb-18469f79e985"
        },
        "target": {
          "id": "887095d5-93d3-4362-a77f-3635d4739a61"
        },
        "z": 11
      },
      "78378317-55f3-44f8-9a1b-84fd69d099f2": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 120,
          "y": 20
        },
        "z": 0,
        "embeds": [],
        "isrelatedto": [
          "a6bd7331-9caf-4870-9e58-9995968ff894",
          "e83ab78c-f09a-4674-b378-2286ff6a9907"
        ]
      },
      "e83ab78c-f09a-4674-b378-2286ff6a9907": {
        "size": {
          "width": 60,
          "height": 60
        },
        "position": {
          "x": 59.38271405874569,
          "y": 107.3456764101274
        },
        "z": 0,
        "embeds": [],
        "isrelatedto": [
          "78378317-55f3-44f8-9a1b-84fd69d099f2"
        ]
      }
    }
  },
  "Resources": {
    "ccArtifacts": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "d2a6c2f1-17ef-4caf-94ed-1089cdfc35fe"
        }
      }
    },
    "ccRepo": {
      "Type": "AWS::CodeCommit::Repository",
      "Properties": {
        "RepositoryDescription": "cf-cc-repo-test",
        "RepositoryName": {
          "Ref": "repoName"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "86f51784-3c2b-4a21-ae03-12511d6f3044"
        }
      }
    },
    "codePipeLineRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "codepipeline.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "lambda_cd-code-pipeline-role",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "codecommit:CancelUploadArchive",
                    "codecommit:GetBranch",
                    "codecommit:GetCommit",
                    "codecommit:GetUploadArchiveStatus",
                    "codecommit:UploadArchive"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                },
                {
                  "Action": [
                    "s3:PutObject"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "ccArtifacts"
                        },
                        "*"
                      ]
                    ]
                  },
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectVersion",
                    "s3:GetBucketVersioning"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                },
                {
                  "Action": [
                    "lambda:InvokeFunction",
                    "lambda:ListFunctions",
                    "lambda:UpdateFunctionCode"
                  ],
                  "Resource": "*",
                  "Effect": "Allow"
                }
              ]
            }
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "418c3809-728f-4781-9155-509f9cad10ee"
        }
      }
    },
    "lambdaception": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "lambda_cd-lambdaception-execution-role",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Action": [
                    "codepipeline:*",
                    "lambda:*",
                    "logs:*",
                    "s3:GetObject"
                  ],
                  "Effect": "Allow",
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "a6bd7331-9caf-4870-9e58-9995968ff894"
        }
      }
    },
    "targetFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": {
          "Ref": "repoName"
        },
        "Handler": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "repoName"
              },
              ".main"
            ]
          ]
        },
        "Role": {
          "Fn::GetAtt": [
            "cfnLambdaExec",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": 3,
        "Code": {
          "ZipFile": "#!/usr/bin/env python\n\ndef main(*args, **kwargs):\n\tpass\n\nif __name__==\"__main__\":\n\tmain()"
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "78378317-55f3-44f8-9a1b-84fd69d099f2"
        }
      }
    },
    "cfnLambdaExec": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "lambda_cd-target-lambda-function-execution-role",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "logs:CreateLogGroup",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":*"
                      ]
                    ]
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:logs:",
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AWS::AccountId"
                        },
                        ":log-group:/aws/lambda/*"
                      ]
                    ]
                  }
                }
              ]
            }
          }
        ]
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "e83ab78c-f09a-4674-b378-2286ff6a9907"
        }
      }
    },
    "cfnPipeline": {
      "Type": "AWS::CodePipeline::Pipeline",
      "Properties": {
        "Name": "cfn-lambda_cd",
        "RoleArn": {
          "Fn::GetAtt": [
            "codePipeLineRole",
            "Arn"
          ]
        },
        "Stages": [
          {
            "Name": "Source",
            "Actions": [
              {
                "InputArtifacts": [],
                "Name": "Source",
                "ActionTypeId": {
                  "Category": "Source",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "CodeCommit"
                },
                "OutputArtifacts": [
                  {
                    "Name": "MyApp"
                  }
                ],
                "Configuration": {
                  "BranchName": "master",
                  "RepositoryName": {
                    "Ref": "repoName"
                  }
                },
                "RunOrder": 1
              }
            ]
          },
          {
            "Name": "Deploy",
            "Actions": [
              {
                "InputArtifacts": [
                  {
                    "Name": "MyApp"
                  }
                ],
                "Name": "lambdaception",
                "ActionTypeId": {
                  "Category": "Invoke",
                  "Owner": "AWS",
                  "Version": "1",
                  "Provider": "Lambda"
                },
                "OutputArtifacts": [],
                "Configuration": {
                  "FunctionName": {
                    "Ref": "lambdaDeployer"
                  },
                  "UserParameters": {
                    "Fn::Join": [
                      "",
                      [
                        "{\"targetFunctionName\": \"",
                        {
                          "Ref": "repoName"
                        },
                        "\", \"mainArtifact\": \"MyApp\"}"
                      ]
                    ]
                  }
                },
                "RunOrder": 1
              }
            ]
          }
        ],
        "ArtifactStore": {
          "Type": "S3",
          "Location": {
            "Ref": "ccArtifacts"
          }
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "251d166d-d173-459b-91eb-18469f79e985"
        }
      },
      "DependsOn": [
        "ccRepo",
        "ccArtifacts",
        "codePipeLineRole",
        "lambdaDeployer"
      ]
    },
    "lambdaDeployer": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "index.lambda_handler",
        "Role": {
          "Fn::GetAtt": [
            "lambdaception",
            "Arn"
          ]
        },
        "Runtime": "python2.7",
        "Timeout": 10,
        "Code": {
          "ZipFile": "from __future__ import print_function\nfrom boto3.session import Session\nimport json\nimport boto3\nimport botocore\n\ncode_pipeline = boto3.client('codepipeline')\n\ndef put_job_success(job, message):\n    print('Putting job success')\n    print(message)\n    code_pipeline.put_job_success_result(jobId=job)\n\ndef put_job_failure(job, message):\n    print('Putting job failure')\n    print(message)\n    code_pipeline.put_job_failure_result(jobId=job, failureDetails={'message': message, 'type': 'JobFailed'})\n\ndef setup_lambda_client(job_data):\n    key_id = job_data['artifactCredentials']['accessKeyId']\n    key_secret = job_data['artifactCredentials']['secretAccessKey']\n    session_token = job_data['artifactCredentials']['sessionToken']\n    session = Session(aws_access_key_id=key_id,\n        aws_secret_access_key=key_secret,\n        aws_session_token=session_token)\n    return session.client('lambda', config=botocore.client.Config(signature_version='s3v4'))\n\ndef get_user_params(job_data):\n    try:\n        user_parameters = job_data['actionConfiguration']['configuration']['UserParameters']\n        decoded_parameters = json.loads(user_parameters)\n    except Exception as e:\n        raise Exception('UserParameters could not be decoded as JSON')\n    if 'targetFunctionName' not in decoded_parameters:\n        raise Exception('Your UserParameters JSON must include the name of the target lambda function as the value of the targetFunctionName key')\n    if 'mainArtifact' not in decoded_parameters:\n        raise Exception('Your UserParameters JSON must include the artifact to use as the value of the mainArtifact key')\n    return decoded_parameters\n\ndef find_artifact(artifacts, name):\n    for artifact in artifacts:\n        if artifact['name'] == name:\n            return artifact\n    raise Exception('Input artifact named \"{0}\" not found in event'.format(name))\n\ndef lambda_handler(event, context):\n    try:\n        job_id = event['CodePipeline.job']['id']\n        job_data = event['CodePipeline.job']['data']\n        params = get_user_params(job_data)\n        target_function_name = params['targetFunctionName']\n        artifacts = job_data['inputArtifacts']\n        artifact = params['mainArtifact']\n        artifact_data = find_artifact(artifacts, 'MyApp')\n        lambdaception = boto3.client('lambda')\n        try:\n            lambdaception_response = lambdaception.update_function_code(\n                FunctionName = target_function_name,\n                S3Bucket = artifact_data['location']['s3Location']['bucketName'],\n                S3Key = artifact_data['location']['s3Location']['objectKey'],\n                Publish = True\n            )\n        except Exception as e:\n            put_job_failure(job_id, 'Function exception: ' + str(e))\n        print(lambdaception_response)\n        put_job_success(job_id, 'finished')\n    except Exception as e:\n        print('Function failed due to exception.') \n        put_job_failure(job_id, 'Function exception: ' + str(e))\n    return \"Complete.\""
        }
      },
      "Metadata": {
        "AWS::CloudFormation::Designer": {
          "id": "887095d5-93d3-4362-a77f-3635d4739a61"
        }
      },
      "DependsOn": [
        "lambdaception"
      ]
    }
  }
}
